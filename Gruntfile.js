// jshint node:true

module.exports = function(grunt)
{
    grunt.initConfig(
    {
    // Getting package.json info
        pkg: grunt.file.readJSON("package.json"),

    // Cleaning the dist directory
        clean: ['dist/*'],

    // Compiling SCSS to CSS
        compass:
        {
            dist:
            {
                options:
                {
                    sassDir: 'src',
                    cssDir: 'dist',
                    noLineComments: true    // Disable the comment traces generated by compass
                }
            }
        },

    // Autoprefixing the transforms and transform-styles properties
    // There is no "all" parameter, and all prefixes are needed, so used a BIG value 
        postcss:
        {
            options:
            {
                processors:
                [
                    require('autoprefixer')({browsers: 'last 9999 versions'})
                ]
            },
            dist:
            {
                src: 'dist/absalign.css'
            }
        },

    // Cleaning, with CSSComb, the generated CSS file
        csscomb:
        {
            dist:
            {
                files:
                {
                    'dist/absalign.css': ['dist/absalign.css'],
                }
            }
        },

    // Adding some package info, like version or author, to header comments
        replace:
        {
            dist:
            {
                options:
                {
                    variables:
                    {
                    // Replaces "@@key" with "value"
                        'name': "<%= pkg.name %>",
                        'version': "<%= pkg.version %>",
                        'author': "<%= pkg.author %>",
                        'homepage': "<%= pkg.homepage %>"
                    }
                },
                files:
                {
                    'dist/absalign.css': ['dist/absalign.css'],
                    'dist/absalign.js': ['src/absalign.js']
                }
            }
        },

    // Minifying CSS file
        cssmin:
        {
            dist:
            {
                files:
                [{
                    expand: true,
                    cwd: 'dist/',
                    src: ['*.css'],
                    dest: 'dist/',
                    ext: '.min.css'
                }]
            }
        },

    // Minifying JS file
        uglify:
        {
            options:
            {
            // Preserve the header comments (which begins by /**!)
                preserveComments: 'some'
            },
            dist:
            {
                files:
                {
                    'dist/absalign.min.js': ['dist/absalign.js']
                }
            }
        },

    // Executing both minification operations at the same time
        concurrent:
        {
            min: ['cssmin', 'uglify']
        }
    });

    grunt.loadNpmTasks('grunt-contrib-clean');
    grunt.loadNpmTasks('grunt-contrib-compass');
    grunt.loadNpmTasks('grunt-postcss');
    grunt.loadNpmTasks('grunt-csscomb');
    grunt.loadNpmTasks('grunt-replace');
    grunt.loadNpmTasks('grunt-contrib-cssmin');
    grunt.loadNpmTasks('grunt-contrib-uglify');
    grunt.loadNpmTasks('grunt-concurrent');

    grunt.registerTask('build', ['clean', 'compass', 'postcss', 'csscomb', 'replace', 'concurrent:min']);
};
